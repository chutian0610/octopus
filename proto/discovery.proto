syntax = "proto3";
package discovery;
import "common.proto";

/* =============== Discovery Server ================= */

message SerivceAnnounceReq {
  string service_id = 1;
  string cluster_id = 2;
  string instance_id = 3;
  string host = 4;
  int32 port = 5;
}

message ServiceAnnounceResp {}

message GetServicesReq {
  string service_id = 1;
  // filter by cluster_id (optional)
  optional string cluster_id = 2;
}

message GetSerivcesResp {
  repeated common.ServiceInstance instances = 1;
}

service DiscoveryServer {
  // Announce a node to the discovery server.
  rpc Announce(SerivceAnnounceReq) returns (ServiceAnnounceResp);
  // UnAnnounce a node from the discovery server.
  rpc UnAnnounce(SerivceAnnounceReq) returns (ServiceAnnounceResp);
  // Get all services.
  rpc GetServices(GetServicesReq) returns (GetSerivcesResp);

}
/* =============== Service Health Checker ================= */
message HealthCheckReq {
}

message HealthCheckResp {
  common.ServiceStatus status = 1;
}

service HealthChecker {
  rpc Check(HealthCheckReq) returns (HealthCheckResp);
}