syntax = "proto3";
package discovery;
import "common.proto";
import "google/protobuf/empty.proto";

/* =============== Discovery Server ================= */

message NodeAnnounceReq {
  string cluster_id = 1;
  string instance_id = 2;
  repeated ServiceAnnounceReq services = 3;
  int64 timestamp = 4;
}

message ServiceAnnounceReq{
  string service_id = 1;
  string host = 2;
  int32 port = 3;
}

message NodeAnnounceResp {}

message LookUpReq {
  optional string service_id = 1;
  optional string cluster_id = 2;
}

message LookUpResp {
  repeated common.ServiceMetadata services = 1;
}

service DiscoveryService {
  // Announce a node to the discovery server.
  rpc Announce(NodeAnnounceReq) returns (NodeAnnounceResp);
  // UnAnnounce a node from the discovery server.
  rpc UnAnnounce(NodeAnnounceReq) returns (NodeAnnounceResp);
  // look up services.
  rpc LookUp(LookUpReq) returns (LookUpResp);
}

/* =============== Remote Store ================= */

message RemoteStoreSaveResp {}

service RemoteStoreService{
  rpc Save(common.Entry) returns (RemoteStoreSaveResp);
  rpc GetAll(google.protobuf.Empty) returns (common.EntryList);
}

/* =============== Service Health Checker ================= */
message HealthCheckReq {
}

message HealthCheckResp {
  common.ServiceStatus status = 1;
}

service HealthCheckService {
  rpc Check(HealthCheckReq) returns (HealthCheckResp);
}